{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Choosing a hierarchical prior\n",
    "\n",
    "<hr>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Choice of a hierarchical prior is not always as straightforward as for priors we are used to considering because we have to specify the hyperprior and all conditional priors, $g(\\theta\\mid \\phi)$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exchangeability\n",
    "\n",
    "The conditional probability, $g(\\theta\\mid \\phi)$, can take any reasonable form. In the case where we have no reason to believe that we can distinguish any one $\\theta_i$ from another prior to the experiment, then the label \"$i$\" applied to the experiment may be exchanged with the label of any other experiment.  I.e., $g(\\theta_1, \\theta_2, \\ldots, \\theta_k \\mid \\phi)$ is invariant to permutations of the indices.  Parameters behaving this way are said to be **exchangeable**. A common (simple) exchangeable distribution is\n",
    "\n",
    "\\begin{align}\n",
    "g(\\theta\\mid \\phi) = \\prod_{i=1}^k g(\\theta_i\\mid \\phi),\n",
    "\\end{align}\n",
    "\n",
    "which means that each of the parameters is an independent sample out of a distribution $g(\\theta_i\\mid \\phi)$, which we often take to be the same for all $i$. This is reasonable to do in the worm reversal example.\n",
    "\n",
    "In all of the hierarchical models we will work with, we will assume exchangeability. In situations where the indices of the experiment contain real information, meaning that the  prior is no longer invariant to permuations of the indices, we lose exchangeability. An example would be if we did one set of experiments on one instrument and another set of experiments on another instrument. If we suspect these different instrument may have a real effect on the measured data, we need to explicitly model the differences. This is an example of a **factor model**, which feature more nuance than the hierarchical models we will consider. We will not go into factor models in this course (but we definitely would if we had more time! Add it to the long list of beautiful advanced topics....). Of course, we may *choose* to ignore differences between the two instruments in our modeling and recover exchangeability."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Choice of the conditional distribution\n",
    "\n",
    "We need to specify our prior, which for this hierarchical model means that we have to specify the conditional distribution, $g(\\theta_i\\mid \\phi)$, as well as $g(\\phi)$. We could assume a Beta prior for $\\phi$; the one we chose in our original nonhierarchical model would be a good choice.\n",
    "\n",
    "\\begin{align}\n",
    "\\phi \\sim \\text{Beta}(1.1, 1.1).\n",
    "\\end{align}\n",
    "\n",
    "For the conditional distribution $g(\\theta_i\\mid \\phi)$, we might also assume it is Beta-distributed. This necessitates another parameter because the Beta distribution has two parameters.\n",
    "\n",
    "The Beta distribution is typically written as\n",
    "\n",
    "\\begin{align}\n",
    "g(\\theta\\mid \\alpha, \\beta) = \\frac{\\Gamma(\\alpha+\\beta)}{\\Gamma(\\alpha)\\Gamma(\\beta)}\\,\n",
    "\\theta^{\\alpha-1}(1-\\theta)^{\\beta-1},\n",
    "\\end{align}\n",
    "\n",
    "where it is parametrized by positive constants $\\alpha$ and $\\beta$. The Beta distribution has mean and **concentration**, respectively, of\n",
    "\n",
    "\\begin{align}\n",
    "\\phi &= \\frac{\\alpha}{\\alpha + \\beta}, \\\\[1em]\n",
    "\\kappa &= \\alpha + \\beta.\n",
    "\\end{align}\n",
    "\n",
    "The concentration $\\kappa$ is a measure of how sharp the distribution is. The bigger $\\kappa$ is, the most sharply peaked the distribution is. Since we would like to parametrize our Beta distribution with its mean $\\phi$, we could use $\\kappa$ as our other parameter. So, our expression for the posterior is\n",
    "\n",
    "\\begin{align}\n",
    "g(\\theta, \\phi, \\kappa \\mid n, N) = \\frac{f(n,N\\mid \\theta)\\,\\left(\n",
    "\\prod_{i=1}^k g(\\theta_i\\mid \\phi, \\kappa)\\right)\\,g(\\phi, \\kappa)}{f(n, N)}.\n",
    "\\end{align}\n",
    "\n",
    "We are left to specify the hyperprior $g(\\phi, \\kappa)$. We will take $\\phi$ to come from a Beta distribution and $\\kappa$ to come from an weakly informative Half-Normal. Note that to switch from a parametrization using $\\phi$ and $\\kappa$ to one using $\\alpha$ and $\\beta$, we can use\n",
    "\n",
    "\\begin{align}\n",
    "&\\alpha = \\phi \\kappa\\\\[1em]\n",
    "&\\beta = (1-\\phi)\\kappa.\n",
    "\\end{align}\n",
    "\n",
    "With all of this, we can now put together our model.\n",
    "\n",
    "\\begin{align}\n",
    "&\\phi \\sim \\text{Beta}(1.1, 1.1), \\\\[1em]\n",
    "&\\kappa \\sim \\text{HalfNorm}(0, 10), \\\\[1em]\n",
    "&\\alpha = \\phi \\kappa, \\\\[1em]\n",
    "&\\beta = (1-\\phi)\\kappa,\\\\[1em]\n",
    "&\\theta_i \\sim \\text{Beta}(\\alpha, \\beta) \\;\\;\\forall i,\\\\[1em]\n",
    "&n_i \\sim \\text{Binom}(N_i, \\theta_i)\\;\\;\\forall i. \n",
    "\\end{align}\n",
    "\n",
    "This is a complete specification of a hierarchical model."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
