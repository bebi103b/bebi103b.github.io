{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# R2. Review of MLE\n",
    "\n",
    "*This recitation was prepared by Rosita Fu.*\n",
    "\n",
    "<hr>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Although we will not be doing anymore MLE this term, the analytical and numerical techniques we learned last term will translate well to some of our objectives this term. We will review what the MLE is, how to find it analytically and numerically, and see how this helps us construct confidence intervals for our parameters. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Review of BE/Bi 103 a lessons\n",
    "\n",
    "The relevant BE/Bi103a lessons are linked, but they are essentially lessons [19](https://bebi103a.github.io/lessons/19/mle.html), [20](https://bebi103a.github.io/lessons/20/index.html), and [22](https://bebi103a.github.io/lessons/22/index.html). \n",
    "\n",
    "1. MLE Introduction: [notes](https://bebi103a.github.io/lessons/19/mle.html)  \n",
    "2. Analytical MLE: [Poisson](https://bebi103a.github.io/lessons/19/mle.html#mle-for-rate-of-arrival-of-a-poisson-process) and [Normal](https://bebi103a.github.io/lessons/19/mle.html#mle-for-the-mean-and-variance-of-a-normal-distribution). \n",
    "3. Numerical MLE: [notes](https://bebi103a.github.io/lessons/20/numerical_mle.html)   \n",
    "4. MLE Confidence Intervals: [notes](https://bebi103a.github.io/lessons/20/mle_confidence_intervals.html)  \n",
    "5. Regression: [normal MLE](https://bebi103a.github.io/lessons/22/mle_normal.html) & [regression](https://bebi103a.github.io/lessons/22/regression.html)   \n",
    "\n",
    "For those who are just joining us this term, if time allows, to understand [confidence intervals](https://bebi103a.github.io/lessons/14/confidence_intervals.html), it might be helpful to review what [bootstrapping](https://bebi103a.github.io/lessons/18/intro_bootstrap.html) is. If the distributions themselves are new to you, you will become intimately familiar with them by the end of this term, so I wouldn't worry too much. I would recommend bookmarking [distribution-explorer.github.io](https://distribution-explorer.github.io/), or visiting the link so many times all you have to do is type 'd' + 'enter'. \n",
    "\n",
    "For the unfamiliar with MLE, make sure you understand what the **likelihood function** is (it is *not* the likelihood in the Bayesian setting), and the **assumptions** we made when trying to maximize it. Your teammates might be more comfortable with the code, which seems daunting at first, but the bare-bones of which are:  \n",
    "1. Write a `def log_likelihood(...)` function that works.  \n",
    "2. Write a `scipy.optimize.minimize(...)` function with kywargs:  \n",
    "    `fun`: lambda parameters\n",
    "    `x0`: initial guess for parameters of type array, (order should match the log_likelihood function you defined)  \n",
    "    `method`: either 'BFGS' or 'Powell'\n",
    "3. Add warning-filters and retrieve parameters  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Notes\n",
    "\n",
    "Following are notes to accompany recitation. If you are already familiar with MLE, I suggest jumping to the last section (parameter estimation)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br />\n",
    "<br />\n",
    "<hr>\n",
    "<br />\n",
    "<br />\n",
    "\n",
    "![img1](img1.png)\n",
    "\n",
    "<br />\n",
    "<br />\n",
    "<hr>\n",
    "<br />\n",
    "<br />\n",
    "\n",
    "![img2](img2.png)\n",
    "\n",
    "<br />\n",
    "<br />\n",
    "<hr>\n",
    "\n",
    "<br />\n",
    "<br />"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Numerical MLE for mortals tend to be somewhat challenging, so we are always on the look-out for more elegant approaches (or at the very least, doing as much work analytically as we can to make the computation a smoother process). <br>\n",
    "For a likelihood constructed from a normal distribution, we can apply a very nice property that maximizing the likelihood is functionally equivalent to minimizing the residuals. \n",
    "*I include my notes here as a reminder of the sensibility of least squares with a particular distribution: the Normal.* \n",
    "<br>\n",
    "<br>\n",
    "<br>\n",
    "\n",
    "![img3](img3.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "<br>\n",
    "<hr>\n",
    "<br>\n",
    "<br>\n",
    "\n",
    "![img0](img0.jpg)\n",
    "\n",
    "At its very core, the MLE likelihood is *a function of its parameters*, and its maximization is motivated by the following: \"*among all explanations from the observed data, choose as best the one that makes the data most probable.*\" <br>\n",
    "\n",
    "As you have learned this past week, the likelihood in Bayesian modeling is defined differently: it is merely the (conditional) probability of observing our dataset conditioned on a set of parameters, and sits in the numerator. Bayes' law proceeds to give us a *posterior* distribution for our parameter, and summarizing this posterior with a [MAP and/or credible interval](https://bebi103b.github.io/lessons/06/optimization_basics.html) is analagous to reporting an MLE with a confidence interval. <br>\n",
    "\n",
    "I hope you can see that the Bayesian likelihood encodes how our data is generated, but it is an intermediate figure in our parameter estimationâ€”what is of interest in the end is our posterior, whereas the MLE likelihood is directly the thing we maximize. <br>\n",
    "\n",
    "One last note: although numerically, the MLE/Bayesian likelihood may give us the same value for a given $\\theta$, they mean different things, and come from different places. Recall above where we took a joint pdf in the MLE, and made the **i.i.d.** assumption to justify taking a product (can only do this for independent events). We do not actually need the assumption of independence in a Bayesian context: Bayes' law is *always* true! Thus, the data acquisition process can be thought of as presented in [Lesson 1](https://bebi103b.github.io/lessons/01/bayes_model_for_learning.html). We may, however, still need the identically distributed assumption (though the Bayesian framework offers us a way to explicitly encode parameters we know to be non-identical: this is the essence of hierarchical modeling, and will be introduced towards the end of the course). <br>\n",
    "\n",
    "I encourage you to read the lessons for a much more thorough introduction and demonstration, but I hope the motivation is somewhat clear, or at the very least, less obscure. <br>"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
